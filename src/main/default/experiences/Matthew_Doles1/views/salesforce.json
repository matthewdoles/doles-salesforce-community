{
  "appPageId": "bc7511ba-0fce-40eb-b7e3-1ebb0d62c409",
  "componentName": "siteforce:sldsOneColLayout",
  "id": "cd4829cf-beb5-4f32-97b6-50376d6ab3c5",
  "label": "Salesforce",
  "regions": [
    {
      "id": "e54128cc-8a0c-4fde-9e24-e0e447ba8099",
      "regionName": "header",
      "type": "region"
    },
    {
      "components": [
        {
          "componentAttributes": {
            "title": "Franco Signor"
          },
          "componentName": "c:contentHeader",
          "id": "8c420c90-ac14-4bc3-be7c-41aad60c15f6",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        },
        {
          "componentAttributes": {
            "richTextValue": "<p style=\"font-size: 16px\" class=\"slds-p-bottom_large\">\n    I list my Salesforce experience gained while working at Franco Signor first because it was the first time I was \n    exposed to the platform. However, most of my experience was more so in interacting with the Salesforce API, and as laid out in my experience \n    section for Franco Signor: Programming SSIS packages that query client data using SQL which is then \n    transformed and imported into the appropriate Salesforce objects.\n</p>\n<p style=\"font-size: 16px\" class=\"slds-p-bottom_large\">\n    As time carried on, Franco Signor began leveraging the power of Salesforce more and more. Utilizing features \n    such as workflow rules, process builders, and flows. While I poked around a little and inspected what they\n    were doing, I had not built any of this functionality. In fact, it was all done by one business analyst,\n    <a href=\"https://www.linkedin.com/in/brandon-weber-76500553/\"> Brandon Webber</a>,\n    who eventually went on to become a Sr. Associate at PricewaterhouseCoopers thanks to his experience learning Salesforce.\n    So, as my graduation date neared and I began pondering what my career path may look like; Brandon had encouraged me \n    to get into Salesforce. \n</p>"
          },
          "componentName": "forceCommunity:htmlBlock",
          "id": "346949f2-9415-4fe7-a6e5-715f81ac30d3",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        },
        {
          "componentAttributes": {
            "title": "Trailhead"
          },
          "componentName": "c:contentHeader",
          "id": "772acd4d-0562-45ec-ac71-49b51f49e624",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        },
        {
          "componentAttributes": {
            "richTextValue": "<h3>Profile:&nbsp;<a href=\"https://trailhead.salesforce.com/me/matthewdoles\" target=\"null\">Matthew Doles</a></h3><h3>2 x Ranger</h3><p><br></p><p><span style=\"font-size: 16px;\">Like any earnest Salesforce Developer, my journey truly took off when I became an official Trailblazer which was in May of 2018. I had previously done some Trailhead here and there prior, but this is truly when I started dedicating hours to learn Salesforce. After a few months and&nbsp;</span><a href=\"https://www.udemy.com/salesforce-administrator/\" target=\"null\" style=\"font-size: 16px;\"><b>Mike Wheeler's great Admin Course</b></a><span style=\"font-size: 16px;\">&nbsp;, I had became a Salesforce Certified Administrator.</span></p><p><br></p><p><span style=\"font-size: 16px;\">As mentioned in my experience section for Johnson &amp; Johnson, I had landed a job on contract there thanks to my new certification. So, while I was getting acquainted with my new role, my Trailhead journey took a small pause. However, the quest for more certifications came back with a force in late December of 2018 when I began prepping for the Platform App Builder exam by using Trailhead and yet another great&nbsp;</span><a href=\"https://www.udemy.com/course/salesforce-platform-app-builder/\" target=\"null\" style=\"font-size: 16px;\"><b>Mike Wheeler course for Platform App Builder</b></a><span style=\"font-size: 16px;\">. In fact, I had attempted and passed the exam on Christmas Eve which had made for an extra enjoyable holiday season.</span></p><p><br></p><p><span style=\"font-size: 16px;\">However, I was still not done. I quickly turned around and dedicated myself to earning the Platform Developer I certification. This is when I truly leaned in on Trailhead as I worked my way through their official&nbsp;</span><a href=\"https://trailhead.salesforce.com/en/users/strailhead/trailmixes/prepare-for-your-salesforce-platform-developer-i-credential\" target=\"null\" style=\"font-size: 16px;\"><b>Platform Developer I Trail</b></a><span style=\"font-size: 16px;\">. With only a little over a month of elapsed time since I had passed my previous exam, I attempted and passed the Platform Developer I exam.</span></p><p><br></p><p><span style=\"font-size: 16px;\">At this point of time, I had become close to Ranger status. So as I made that push, I took a shining to the Superbadges as they provide real-world scenarios instead of just walking you through a simple project. Some of my favorite Trailhead material that I really took to dealt with front-end development. In fact, around this time Lighting Web Components (LWC) was trending up - the new and improved alternative to Aura components. Consuming the&nbsp;</span><a href=\"https://github.com/trailheadapps/lwc-recipes\" target=\"null\" style=\"font-size: 16px;\"><b>LWC Recipes</b></a><span style=\"font-size: 16px;\">&nbsp;was a huge resource to learning LWC; I even made it an exercise to re-program all the components line-by-line to understand their inner wrokrings.</span></p><p><br></p><p><span style=\"font-size: 16px;\">From 2019 to 2020...double ranger and javascript certification.</span></p><p><br></p><p><span style=\"font-size: 16px;\">Although it started as an exercise for learning SFDX, I try to do as much Trailhead exercises as possible in my devloper edition org and track it in source control:&nbsp;</span><a href=\"https://github.com/matthewdoles/salesforce-dev-doles-dx\" target=\"null\" style=\"font-size: 16px; background-color: rgb(255, 255, 255);\"><b>salesforce-doles-dx.</b></a></p><p>&nbsp;</p>"
          },
          "componentName": "forceCommunity:richTextInline",
          "id": "ce538d36-6d10-47c9-8df5-8075fadeacce",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        },
        {
          "componentAttributes": {
            "title": "Johnson and Johnson"
          },
          "componentName": "c:contentHeader",
          "id": "afc0d355-86fe-4ea5-b7f9-1f2555ddcdc8",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        },
        {
          "componentAttributes": {
            "richTextValue": "<p style=\"font-size: 16px\" class=\"slds-p-bottom_large\">\n    Although I do not do much developer work in my role as an Application Support Analyst. Opportunities have arose to work\n    with the Salesforce BUILD team on the side which is what quickly motivated me to pursue my Platform App Builder and\n    Platform Developer I certifications. With those in hand, I could start getting my feet wet at as a developer on a enterprise level. \n</p>\n<p style=\"font-size: 16px\" class=\"slds-p-bottom_large\">\n    To date, I have only worked on a couple projects. The first one being a Proof of Concept (POC) project called \n    Business Technology Leaders (BTL) Interaction Manager. BTL's within J&amp;J are pretty high up on the totem pole, these\n    individuals determine what applications are going to built, what technology is going to be used to built them, what\n    resources do we have to build them, etc. In a sense, they are the decision makers. This BTL Interaction Manager PoC was\n    built to demo how Salesforce could help capture some of those high-level conversation and put pen to paper. \n</p>\n<p style=\"font-size: 16px\" class=\"slds-p-bottom_large\">\n    For this project, my major contribution was building an Aura Component which helps the BTLs navigate the various \n    Product Catalogs and their corresponding Capabilities. Product Catalogs and Capabilities are both custom objects.\n    The two objects are also in a master-detail relationship with Product Catalog being the master. Capabilities also \n    has a parent-child relationship with itself. However, only Capabilities marked with the 'IsParent' flag \n    can be related to a Product Catalog. This to help prevent a Capability with a parent Capability from being added to a\n    Product Catalog. As you can begin to see, this can be rather layered. Thus, the Aura Component I built nicely\n    displays a tree view of this hierarchy for the BTL to browse. The Aura Component also allows you to view existing\n    projects and implementations (Assets object) for each Capability. Then, if the Capability is something that fits\n    your need, you can add it directly to your project (Opportunity object).\n</p>\n<p style=\"font-size: 16px\" class=\"slds-p-bottom_large\">\n    The second project I have worked on was a Visualforce to Lightning conversion/exercise. The Salesforce BUILD Team for\n    J&amp;J have built an internal management tool (Salesforce instance) which helps them track demand, projects,\n    resources, etc. Projects (Opportunity standard object) have related resources (Opportunity Resources custom object) which\n    need to be filled by various employees (Contact standard object). When the application was built, a Visualforce page was\n    developed to manage this interaction of assigning contacts to a project role (Opportunity Resource) for a project\n    (Opportunity). \n</p>\n<p style=\"font-size: 16px\" class=\"slds-p-bottom_large\">\n    This Visualforce page was called Opportunity Resource Management, and while the Visualforce page got the job done -\n    it was in need of a makeover. Thus, my role was to modernize and convert this Visualforce page \n    into an Aura Component(s). The functionality largely remains the same, but the presentation and intuitiveness \n    was made a bit more user friendly. The new Opportunity Resource Management piece can be broken down into 4 \n    separate components that interact with one another:\n    <ul style=\"font-size: 16px\">\n        <li>\n            <b>Search: </b>The top most component in the layout is the search component. This component allows you to\n            search for potential resources (Contacts) to fill your project roles. There are three filters: name,\n            role, and technology skill. The name filter is a text field which allows you to search the name\n            fields on both the Account and Contact object through a SOSL query. The role and technology skill are\n            both drop down lists with defined picklist values which are queried for using Apex. When a user provides filters,\n            they can then click the 'Search' button and an event is fired to start communicating with the below \n            Potential Resources component. \n        </li>\n        <br/>\n        <li>\n            <b>Potential Resources: </b>This component is located directly below the previous Search component, but is \n            only rendered upon searching. The Search component does an Apex call-out to query for\n            for matching data based on the given filters, and then the Potential Resources component renders that data into a \n            formatted datatable. With this datatable rendered, you can begin to add a contact to your project by selecting the\n            far right 'View' button which will fire an event to start communicating with the Add/Edit Resource component. \n        </li>\n        <br/>\n        <li>\n            <b>Add/Edit Resource: </b>This component is located directly below the previous Potential Resources\n            component, and is also only rendered upon selecting an individual resource. The Potential Resources component\n            sends the Contact Id to the Add/Edit Resource component, and then the Add/Edit Resource does an Apex call-out\n            to gather more of the Contact's record details. The primary details being queried for are the Contact's current\n            allocations. An allocation being a percentage of the Contact's time needed for a particular project. So, \n            this component will show you all of the allocations the contact is currently allocated to in between your\n            project's start and end date. If you are comfortable adding the resource to your project without\n            overextending them, you can assign them an allocation yourself and click the 'Add Resource' button.\n        </li>\n        <br/>\n        <li>\n            <b>Current Resources: </b>This component is located directly below all the previous components. However,\n            this component will render on page load. It is also important to note that when a project moves into \n            the 'In Progress' stage, a process builder kicks off which creates mandatory project roles. Thus, this\n            component is a list of all currently allocated resources, and mandatory resources that are yet to be filled.\n            So, when you are adding a resources as described in the previous Add/Edit Resources section, if the contact\n            is filling a mandatory role that is empty, it will do an update operation instead of an insert. However, you\n            can also have multiple resources of the same role type. For instance, few projects will have just one developer. So, when\n            adding a second, third, fourth, etc. developer to a project, it will do an insert operation given that the pre-existing developer role\n            is already filled. You can also edit any resources current allocation for a project by clicking on the 'Edit' button on the resource's \n            corresponding row on the datatable. Upon doing so, an event is fired which is received by the Add/Edit Resource\n            component (hence the name). There you can edit a resource's allocation, change their project role, or even add\n            them to a second project role. \n        </li>\n    </ul>\n</p>"
          },
          "componentName": "forceCommunity:htmlBlock",
          "id": "99bc59da-a4fa-46ce-9442-f6bc7c703f30",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        }
      ],
      "id": "f29ef067-f56d-4ccd-bc9a-c2081b631890",
      "regionName": "content",
      "type": "region"
    },
    {
      "id": "a95c32eb-d10b-4fbb-bb32-1a4ca871e8af",
      "regionName": "footer",
      "type": "region"
    },
    {
      "components": [
        {
          "componentAttributes": {
            "description": "",
            "metaTags": "",
            "title": "Salesforce"
          },
          "componentName": "forceCommunity:seoAssistant",
          "id": "c7603f00-b9b6-44ac-9ddb-93f438eb8933",
          "renditionMap": {},
          "type": "component"
        }
      ],
      "id": "4048d825-9222-4be7-818f-0257b2cf6474",
      "regionName": "sfdcHiddenRegion",
      "type": "region"
    }
  ],
  "themeLayoutType": "ZlSX501OGSGx1tGUJzEwPcoMwn4Yth",
  "type": "view",
  "viewType": "custom-salesforce"
}
