{
  "appPageId": "bc7511ba-0fce-40eb-b7e3-1ebb0d62c409",
  "componentName": "siteforce:sldsOneColLayout",
  "id": "df618390-559d-426b-b801-f1b855ad7472",
  "label": "JSForce Patterns",
  "regions": [
    {
      "components": [
        {
          "componentAttributes": {
            "richTextValue": "<p style=\"text-align: center;\"><img class=\"sfdcCbImage\" src=\"{!contentAsset.jsforcelogo.1}\" style=\"width: 162.938px; height: 162.938px;\" /></p>"
          },
          "componentName": "forceCommunity:richTextInline",
          "id": "93bb2e4d-ced0-4ac3-a837-a29902b261e3",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        }
      ],
      "id": "fac6412f-47d9-4711-985a-baa2f42de917",
      "regionName": "header",
      "type": "region"
    },
    {
      "components": [
        {
          "componentAttributes": {
            "richTextValue": "<h2 style=\"text-align: center;\"><span style=\"font-size: 16px;\">JSforce Patterns</span></h2><p style=\"text-align: center;\"><br></p><p>&nbsp;<span style=\"font-size: 16px;\">JsForce Patterns, in essence, is </span><span style=\"font-size: 16px; color: rgb(36, 41, 46);\">a helper extension for&nbsp;</span><a href=\"https://jsforce.github.io/start/\" target=\"null\" style=\"font-size: 16px; background-color: rgb(255, 255, 255);\"><b>JSForce</b></a><span style=\"font-size: 16px;\">. The package does not do anything revolutionary other than simplify some of the syntax of regualr JSforce. So instead of method chaining actions together, the package allows you to enter all your parameters into one method which you can then either async/await or still optionally callback.</span></p><p><br></p><p><span style=\"font-size: 16px;\">I started looking into JSforce itself around the time I was doing a deep dive into JavaScript frameworks. I was interested in how I could use some of the JavaScript frameworks I was learning, like Node.js, with Salesforce. I found JSforce to be one of the leading candidates for this particular use case of developing Salesforce functionality with an outside JavaScript framework. What I noticed is that the JSforce package was developed back in 2013 and did not leverage some of the advanced and simplified syntax that ES6 provides. Thus, the motivation for creating JSforce Patterns was to simply repackage some of the JSforce functionality with simpler syntax. </span></p><h3><br></h3><p><span style=\"font-size: 16px;\">Whether what I have created is of real use or not is of opinion. The package does indeed allow you to plug in all the parameters into one method which you can async/await, but of course one may have to consult the documentation often in order to memerize the parameters for the various functions and which ones are required. However, there is consistency across the funtions in that the first parameter required will always be a valid Salesforce connection and, if applicable, the second parameter will be the targeted object.</span></p><p><br></p><p><span style=\"font-size: 16px;\">Regardless, I enjoyed my first experience of creating and publsing an npm package. It was also a first for setting up a Continous Integration (CI) process using Travis CI. It wasn't something I had setup until later in the project when I noticed most node packages have badges which indicate if a build of the project was passing and what percentgae of code is covererd by tests. So in order to feel more official, I created my own simple yaml which Travis CI uses to build the package (build badge), runs the tests I created, and sends the results of those tests to Coveralls (code coverage badge). </span></p><p><br></p><p><span style=\"font-size: 16px;\">Repository: </span><a href=\"https://github.com/matthewdoles/jsforce-patterns\" target=\"_blank\" style=\"font-size: 16px;\"><b>https://github.com/matthewdoles/jsforce-patterns</b></a></p><p><span style=\"font-size: 16px;\">npm:</span><a href=\"https://www.npmjs.com/package/jsforce-patterns\" target=\"_blank\" style=\"font-size: 16px;\"> <b>https://www.npmjs.com/package/jsforce-patterns</b></a></p><p><span style=\"font-size: 16px;\">Documentation: </span><a href=\"https://github.com/matthewdoles/jsforce-patterns/tree/master/docs\" target=\"_blank\" style=\"font-size: 16px;\"><b>https://github.com/matthewdoles/jsforce-patterns/tree/master/docs</b></a></p><p>&nbsp;</p>"
          },
          "componentName": "forceCommunity:richTextInline",
          "id": "3ff8d03a-313a-4449-a162-f7de97d62cbe",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        }
      ],
      "id": "15ffcf5d-9a80-4f65-a8c2-bf5f21efed44",
      "regionName": "content",
      "type": "region"
    },
    {
      "id": "cb0ef3f4-b0f0-4075-bcbb-f36b61683525",
      "regionName": "footer",
      "type": "region"
    },
    {
      "components": [
        {
          "componentAttributes": {
            "description": "",
            "metaTags": "",
            "title": "JSForce Patterns"
          },
          "componentName": "forceCommunity:seoAssistant",
          "id": "2e808e20-29ba-4681-94ca-537d9dcb9645",
          "renditionMap": {},
          "type": "component"
        }
      ],
      "id": "9b9e9a59-5351-4ee3-b9e2-d1cfd91c3ee2",
      "regionName": "sfdcHiddenRegion",
      "type": "region"
    }
  ],
  "themeLayoutType": "Inner",
  "type": "view",
  "viewType": "custom-jsforce-patterns"
}
