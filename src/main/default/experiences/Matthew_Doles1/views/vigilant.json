{
  "appPageId": "bc7511ba-0fce-40eb-b7e3-1ebb0d62c409",
  "componentName": "siteforce:sldsOneColLayout",
  "id": "93951b25-3671-4bf5-af2d-c552cb802b5c",
  "label": "Vigilant",
  "regions": [
    {
      "components": [
        {
          "componentAttributes": {
            "richTextValue": "<p style=\"text-align: center;\"><img class=\"sfdcCbImage\" src=\"{!contentAsset.VigilantAppLogo.1}\" style=\"width: 168.703px; height: 168.016px;\" /></p>"
          },
          "componentName": "forceCommunity:richTextInline",
          "id": "d5c9689a-f9c7-42ec-ae87-2ea91aaac446",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        }
      ],
      "id": "a29c11cf-1195-4d68-8335-b778ff1f1955",
      "regionName": "header",
      "type": "region"
    },
    {
      "components": [
        {
          "componentAttributes": {
            "richTextValue": "<h2 style=\"text-align: center;\">Vigilant - Valorant Strategy</h2><p><br></p><p><span style=\"font-size: 16px;\">Vigilant is a mobile app created with the React Native framework that allows users to c</span><span style=\"font-size: 16px; color: rgb(51, 51, 51);\">reate and save strategy for Valorant. Valorant itself is a 5v5 first person shooter. Each game of Valorant is played til the first team wins 13 rounds. A round is won by either eliminating the entire opposing team, planting and detonating the spike on offense, or defusing the spike before detonation if on defense. Before the game starts though, each team can select an agent to play as. Each agent has unqiue abilites that can range from </span><span style=\"font-size: 16px;\">a flashbang to a recon bolt that reveals enemies location.Thus, with such a wide array of agent abilites to utilize, strategy and coordination on engaging the enemy team is very important. Having observed all the strategy that could go into the game, the idea spawned of creating a tool that lets players c</span><span style=\"font-size: 16px; color: rgb(51, 51, 51);\">reate and save strategy with the game's variuos maps which allow you to place player markers and abilities.</span><span style=\"font-size: 16px;\">&nbsp;&nbsp;&nbsp;</span></p><p><br></p><p><span style=\"font-size: 16px;\">The game released around June of 2020. Was extra convenient for me as it was around this time most of the nation went into qurantine. Thus, with new abundance of free time, I was able to really commit myself to the project. I was not sure on whether the app would be succesful or not; I more so threw myself at it because I wanted to learn React Native. Plus, I had my friend </span><a href=\"https://www.linkedin.com/in/donnie-waters\" target=\"_blank\" style=\"font-size: 16px;\">Donnie Waters</a><span style=\"font-size: 16px;\"> around to consult who had developed his own app in the framework with success: </span><a href=\"https://rocket-league.com/app\" target=\"_blank\" style=\"font-size: 16px;\">Rocket League Garage</a><span style=\"font-size: 16px;\">. So, </span><span style=\"font-size: 16px; color: rgb(51, 51, 51);\">I began development </span><span style=\"font-size: 16px;\">around March 2020. Although the game was not even officially out, it was in open beta which was helpful as it allowed me to observe the game's mechanics, maps, agents, etc. Thus allowing me to start development before the game was even released.</span></p><p><br></p><p><span style=\"font-size: 16px;\">As stated, the front end of the application is React Native, and for the backend I used Firebase. With the </span><a href=\"https://rnfirebase.io/\" target=\"_blank\" style=\"font-size: 16px;\">React Native Firebase</a><span style=\"font-size: 16px;\"> package, a lot of </span><span style=\"font-size: 16px; color: rgb(32, 33, 36);\">functionality </span><span style=\"font-size: 16px;\">that would require a more traditional backend for things such as authentication and database operations can be handled in the frontend securely. However, there are still a handful of backend functions written in Node and deployed as Firebase Cloud Functions. The critical functions serve up the app's static content and images assets which can are cached to optomize performance. Such static content includes the game's agents, maps, and equipment.</span></p><p><br></p><p><span style=\"font-size: 16px;\">For the design of the frontend, you have a login page which allows users to signup or authenticate using a unqie email address. Using React Native Firebase, the frontend can properly do encryted authentication without a need of a backend. The package also natively persists the user's authentication state across sessions. Once authenticated, a user then has permssion to create and save strategy since they have a profile which it can be tied to. The next screen to the left of the Profile on the main bottom tab is a News tab. This screen shows the latest news articles, patch notes, and highlights coming directly from Valorant's very own </span><a href=\"https://playvalorant.com/en-us/news/\" target=\"_blank\" style=\"font-size: 16px;\">news page</a><span style=\"font-size: 16px;\">. Usin</span><span style=\"font-size: 16px; color: rgb(68, 68, 68);\">g the react-native-render-html package, I can take their news feed which provides the content in HTML format, and convert it for mobile viewing. The News Screen also offers a view to switch from news to tweets. The tweets view calls a firebase function which makes a callout to the Twitter API to retrieve the latest tweets from </span><a href=\"https://twitter.com/PlayVALORANT\" target=\"_blank\" style=\"font-size: 16px; color: rgb(0, 102, 204);\">Valorant's Twitter</a><span style=\"font-size: 16px;\">. On the opposite end of the bottom main tab we have the Wiki Screen which as self-described offers a wiki-like catalog of the game's basic information. Specifically you can find a section for the game's agents which is useful for reading up on each agent's abilities. There is also a section for the game's arsenal which lists all the in-game weapons available and their damage outputs at various ranges. Thirdly, a section on the games maps which provides the layouts of the various in-game maps. Then finally, a Lore section which details some of the background and setting for the game itself.</span></p><p><br></p><p><span style=\"font-size: 16px;\">Of course, the primary feature of the app is the ability to create startegy, or how it is also referred to in-app: schemas. Upon booting the app, the first thing the user will see on the Home screen is a list of the 20 most recently created schemas. A user can also filter for schemas by map and agents to find specific strategy. If a user comes across a strategy they like, they can also favorite it (star icon), and the schema will appear as a favortite under their profile for later viewing. An additional feature added later on was the ability to create notes for each specific icon on a map. Initially, users were provided one generic description field to outline and explain their strategy. The ability to create notes for each icon allows the user to be more granular about their stategy. As for creating startegy, the user selects the Create tab on the bottom main tabs, select the map they wish to create stragey for, and then they are presented with that map and 'Agents &amp; Abilites' toolbar above the bottom main tab. Selecting this toolbar opens up a list of the available agents, and selecting an agent opens up a list of their abilities and a player marker to indicate the agent's position. With a selection made, they can tap freely on the map to place the icon. With an active icon placed, an additional toolbar pops up that allows the user to move the icon left or right, rotate the icon, add notes about the icon, or delete the icon entirely. Once satisfied with your creation, clicking the save button in the top right takes the user to a final screen where they are asked to enter a title, description, and a checkbox if they would like to make the schema private (not available to other users).</span></p><p><br></p><p><span style=\"font-size: 16px;\">That is a high level view of the app's main features. While I was shooting to release the app before or on the release date of the game, I was a few weeks delayed due to the slower than usual publishing processing given the global circumstances at the time. Howeverr since launch, I have made a few more enhancements. The biggest one being making the app more social. When I first launched the app, a user could only create and view their own strategy. While I wanted it as a part of the app's intial release, it took quite a bit more effort to build out the user's profile page which allows them to see their own created schemas, schemas they have favorited, and users they are following. In addition to that, I created a Users screen which shows the latest users to sign-up for the app, and search for and follow other users that have also signed-up. There was a definite boost in growth after releasing these social capabilities. Not that the app exploded into popularity, but it has done modestly well. I am more so proud of developing my first React Native app, and while I still support this app and make minor enhancements - I look forward to future opportunities to develop more apps in the framework.</span></p><p><br></p><p><span style=\"font-size: 16px;\">Android: </span><a href=\"https://play.google.com/store/apps/details?id=com.projectvalorapp\" target=\"_blank\" style=\"font-size: 16px;\"><b>https://play.google.com/store/apps/details?id=com.projectvalorapp</b></a></p><p><span style=\"font-size: 16px;\">Apple: </span><a href=\"https://apps.apple.com/us/app/vigilant-valorant-strategy/id1521166919?ign-mpt=uo%3D4\" target=\"_blank\" style=\"font-size: 16px;\"><b>https://apps.apple.com/us/app/vigilant-valorant-strategy/id1521166919?ign-mpt=uo%3D4</b></a></p><p>&nbsp;</p>"
          },
          "componentName": "forceCommunity:richTextInline",
          "id": "ebedb902-fc0b-4dcf-9c9c-1202fe1e8056",
          "renderPriority": "NEUTRAL",
          "renditionMap": {},
          "type": "component"
        }
      ],
      "id": "5b276ac6-e11d-49db-b9ad-bb5f84392760",
      "regionName": "content",
      "type": "region"
    },
    {
      "id": "c48cff16-e150-40bb-aae6-58e127cbdf8a",
      "regionName": "footer",
      "type": "region"
    },
    {
      "components": [
        {
          "componentAttributes": {
            "description": "",
            "metaTags": "",
            "title": "Vigilant"
          },
          "componentName": "forceCommunity:seoAssistant",
          "id": "aae323bd-94b8-4f21-a594-e190122437e6",
          "renditionMap": {},
          "type": "component"
        }
      ],
      "id": "e5c3b443-5b85-41f8-b21c-5dd28fc5083e",
      "regionName": "sfdcHiddenRegion",
      "type": "region"
    }
  ],
  "themeLayoutType": "Inner",
  "type": "view",
  "viewType": "custom-vigilant"
}
